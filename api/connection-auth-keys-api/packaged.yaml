AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A simple backend with a RESTful API endpoint using Amazon API Gateway.
Globals:
  Api:
    Cors:
      AllowMethods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
      AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      AllowOrigin: '''*'''
    Auth:
      DefaultAuthorizer: MyLambdaTokenAuth
      Authorizers:
        MyLambdaTokenAuth:
          FunctionPayloadType: TOKEN
          FunctionArn: arn:aws:lambda:eu-west-1:277265293752:function:szachista-authorizer-AuthKeyAuthorizer-NK9XJEHQIVCW
Resources:
  AuthKeyApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://szachista-connection-auth-keys-api/e69a4e05502cc8cdb3c6884de84ce9e8
      Handler: app.handler
      Runtime: nodejs10.x
      Description: A simple backend with a RESTful API endpoint using Amazon API Gateway.
      MemorySize: 512
      Timeout: 10
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:DeleteItem
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :table/connection_auth_keys
      Events:
        create:
          Type: Api
          Properties:
            Path: /auth-key
            Method: POST
  myHelloTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: connection_auth_keys
      AttributeDefinitions:
      - AttributeName: key
        AttributeType: S
      KeySchema:
      - AttributeName: key
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
