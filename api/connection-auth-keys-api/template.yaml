AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: A simple backend with a RESTful API endpoint using Amazon API Gateway.
Globals:
  Api:
    Cors:
      AllowMethods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"
    Auth:
      DefaultAuthorizer: MyLambdaTokenAuth # OPTIONAL, if you use IAM permissions, specify AWS_IAM.
      Authorizers:
        MyLambdaTokenAuth:
          FunctionPayloadType: TOKEN # OPTIONAL; Defaults to 'TOKEN' when `FunctionArn` is specified
          FunctionArn: arn:aws:lambda:eu-west-1:277265293752:function:szachista-authorizer-AuthKeyAuthorizer-NK9XJEHQIVCW
Resources:
  DependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: chess-game-sockets-dependencies
      Description: Dependencies for sam app
      ContentUri: ../library/dependencies/
      CompatibleRuntimes:
        - nodejs12.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
  AuthKeyApi:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: handler/
      Handler: app.handler
      Runtime: nodejs12.x
      Description: A simple backend with a RESTful API endpoint using Amazon API Gateway.
      MemorySize: 512
      Timeout: 10
      Layers:
      - !Ref DependencyLayer
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:DeleteItem'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/connection_auth_keys'
      Events:
        create:
          Type: Api
          Properties:
            Path: /auth-key
            Method: POST
        cors:
          Type: Api
          Properties:
            Path: /auth-key
            Method: OPTIONS
            Auth:
              Authorizer: NONE

  myHelloTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: connection_auth_keys
      AttributeDefinitions:
        - AttributeName: "key"
          AttributeType: "S"
        - AttributeName: "authContext"
          AttributeType: "S"
#        - AttributeName: "allowed-chat"
#          AttributeType: "S"
#        - AttributeName: "data"
#          AttributeType: "S"
      KeySchema:
        - AttributeName: "key"
          KeyType: "HASH"
        - AttributeName: "authContext"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
