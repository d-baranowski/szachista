AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: A simple backend with a RESTful API endpoint using Amazon API Gateway.
Globals:
  Api:
    Auth:
      DefaultAuthorizer: MyLambdaTokenAuth
      Authorizers:
        MyLambdaTokenAuth:
          FunctionPayloadType: TOKEN
          FunctionArn: arn:aws:lambda:eu-west-1:277265293752:function:szachista-authorizer-AuthKeyAuthorizer-NK9XJEHQIVCW
Resources:
  DependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: chess-lobby-dependencies
      Description: Dependencies for sam app
      ContentUri: ../library/dependencies/
      CompatibleRuntimes:
        - nodejs12.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
  ChessLobbyApi:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: chess-lobby
      CodeUri: handler/
      Handler: app.handler
      Runtime: nodejs12.x
      Description: A simple backend with a RESTful API endpoint using Amazon API Gateway.
      MemorySize: 512
      Timeout: 10
      Layers:
        - !Ref DependencyLayer
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:*'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/chess_lobby'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:*'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/chess_lobby/index/lastActivityKey'
      Events:
        create:
          Type: Api
          Properties:
            Path: /
            Method: POST
        read:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET
        readAll:
          Type: Api
          Properties:
            Path: /
            Method: GET
        update:
          Type: Api
          Properties:
            Path: /
            Method: PUT
        cors:
          Type: Api
          Properties:
            Path: /{id}
            Method: OPTIONS
            Auth:
              Authorizer: NONE
        corsAll:
          Type: Api
          Properties:
            Path: /
            Method: OPTIONS
            Auth:
              Authorizer: NONE
  chessLobbyTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: chess_lobby
      AttributeDefinitions:
        - AttributeName: "key"
          AttributeType: "S"
        - AttributeName: "createdTime"
          AttributeType: "N"
        - AttributeName: "lastActivityDay"
          AttributeType: "S"
        - AttributeName: "lastActivity"
          AttributeType: "N"
      KeySchema:
        - AttributeName: "key"
          KeyType: "HASH"
        - AttributeName: "createdTime"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: lastActivityKey
          Projection:
            ProjectionType: 'ALL'
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          KeySchema:
            - AttributeName: 'lastActivityDay'
              KeyType: 'HASH'
            - AttributeName: 'lastActivity'
              KeyType: 'RANGE'
